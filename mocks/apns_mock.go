// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/notifications/apns.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	notifications "github.com/soapboxsocial/soapbox/pkg/notifications"
	reflect "reflect"
)

// MockAPNS is a mock of APNS interface
type MockAPNS struct {
	ctrl     *gomock.Controller
	recorder *MockAPNSMockRecorder
}

// MockAPNSMockRecorder is the mock recorder for MockAPNS
type MockAPNSMockRecorder struct {
	mock *MockAPNS
}

// NewMockAPNS creates a new mock instance
func NewMockAPNS(ctrl *gomock.Controller) *MockAPNS {
	mock := &MockAPNS{ctrl: ctrl}
	mock.recorder = &MockAPNSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPNS) EXPECT() *MockAPNSMockRecorder {
	return m.recorder
}

// Send mocks base method
func (m *MockAPNS) Send(target string, notification notifications.PushNotification) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", target, notification)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *MockAPNSMockRecorder) Send(target, notification interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockAPNS)(nil).Send), target, notification)
}
