// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.2
// source: soapbox/v1/signal.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalReply_Error int32

const (
	SignalReply_ERROR_CLOSED      SignalReply_Error = 0
	SignalReply_ERROR_FULL        SignalReply_Error = 1
	SignalReply_ERROR_NOT_INVITED SignalReply_Error = 2
)

// Enum value maps for SignalReply_Error.
var (
	SignalReply_Error_name = map[int32]string{
		0: "ERROR_CLOSED",
		1: "ERROR_FULL",
		2: "ERROR_NOT_INVITED",
	}
	SignalReply_Error_value = map[string]int32{
		"ERROR_CLOSED":      0,
		"ERROR_FULL":        1,
		"ERROR_NOT_INVITED": 2,
	}
)

func (x SignalReply_Error) Enum() *SignalReply_Error {
	p := new(SignalReply_Error)
	*p = x
	return p
}

func (x SignalReply_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalReply_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_soapbox_v1_signal_proto_enumTypes[0].Descriptor()
}

func (SignalReply_Error) Type() protoreflect.EnumType {
	return &file_soapbox_v1_signal_proto_enumTypes[0]
}

func (x SignalReply_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalReply_Error.Descriptor instead.
func (SignalReply_Error) EnumDescriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{1, 0}
}

type Trickle_Target int32

const (
	Trickle_TARGET_PUBLISHER  Trickle_Target = 0
	Trickle_TARGET_SUBSCRIBER Trickle_Target = 1
)

// Enum value maps for Trickle_Target.
var (
	Trickle_Target_name = map[int32]string{
		0: "TARGET_PUBLISHER",
		1: "TARGET_SUBSCRIBER",
	}
	Trickle_Target_value = map[string]int32{
		"TARGET_PUBLISHER":  0,
		"TARGET_SUBSCRIBER": 1,
	}
)

func (x Trickle_Target) Enum() *Trickle_Target {
	p := new(Trickle_Target)
	*p = x
	return p
}

func (x Trickle_Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trickle_Target) Descriptor() protoreflect.EnumDescriptor {
	return file_soapbox_v1_signal_proto_enumTypes[1].Descriptor()
}

func (Trickle_Target) Type() protoreflect.EnumType {
	return &file_soapbox_v1_signal_proto_enumTypes[1]
}

func (x Trickle_Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trickle_Target.Descriptor instead.
func (Trickle_Target) EnumDescriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{8, 0}
}

type SignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//	*SignalRequest_Join
	//	*SignalRequest_Create
	//	*SignalRequest_Description
	//	*SignalRequest_Trickle
	Payload isSignalRequest_Payload `protobuf_oneof:"payload"`
}

func (x *SignalRequest) Reset() {
	*x = SignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRequest) ProtoMessage() {}

func (x *SignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRequest.ProtoReflect.Descriptor instead.
func (*SignalRequest) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{0}
}

func (x *SignalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *SignalRequest) GetPayload() isSignalRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SignalRequest) GetJoin() *JoinRequest {
	if x, ok := x.GetPayload().(*SignalRequest_Join); ok {
		return x.Join
	}
	return nil
}

func (x *SignalRequest) GetCreate() *CreateRequest {
	if x, ok := x.GetPayload().(*SignalRequest_Create); ok {
		return x.Create
	}
	return nil
}

func (x *SignalRequest) GetDescription() *SessionDescription {
	if x, ok := x.GetPayload().(*SignalRequest_Description); ok {
		return x.Description
	}
	return nil
}

func (x *SignalRequest) GetTrickle() *Trickle {
	if x, ok := x.GetPayload().(*SignalRequest_Trickle); ok {
		return x.Trickle
	}
	return nil
}

type isSignalRequest_Payload interface {
	isSignalRequest_Payload()
}

type SignalRequest_Join struct {
	Join *JoinRequest `protobuf:"bytes,2,opt,name=join,proto3,oneof"`
}

type SignalRequest_Create struct {
	Create *CreateRequest `protobuf:"bytes,3,opt,name=create,proto3,oneof"`
}

type SignalRequest_Description struct {
	Description *SessionDescription `protobuf:"bytes,4,opt,name=description,proto3,oneof"`
}

type SignalRequest_Trickle struct {
	Trickle *Trickle `protobuf:"bytes,5,opt,name=trickle,proto3,oneof"`
}

func (*SignalRequest_Join) isSignalRequest_Payload() {}

func (*SignalRequest_Create) isSignalRequest_Payload() {}

func (*SignalRequest_Description) isSignalRequest_Payload() {}

func (*SignalRequest_Trickle) isSignalRequest_Payload() {}

type SignalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//	*SignalReply_Join
	//	*SignalReply_Create
	//	*SignalReply_Description
	//	*SignalReply_Trickle
	//	*SignalReply_Error_
	Payload isSignalReply_Payload `protobuf_oneof:"payload"`
}

func (x *SignalReply) Reset() {
	*x = SignalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReply) ProtoMessage() {}

func (x *SignalReply) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReply.ProtoReflect.Descriptor instead.
func (*SignalReply) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{1}
}

func (x *SignalReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *SignalReply) GetPayload() isSignalReply_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SignalReply) GetJoin() *JoinReply {
	if x, ok := x.GetPayload().(*SignalReply_Join); ok {
		return x.Join
	}
	return nil
}

func (x *SignalReply) GetCreate() *CreateReply {
	if x, ok := x.GetPayload().(*SignalReply_Create); ok {
		return x.Create
	}
	return nil
}

func (x *SignalReply) GetDescription() *SessionDescription {
	if x, ok := x.GetPayload().(*SignalReply_Description); ok {
		return x.Description
	}
	return nil
}

func (x *SignalReply) GetTrickle() *Trickle {
	if x, ok := x.GetPayload().(*SignalReply_Trickle); ok {
		return x.Trickle
	}
	return nil
}

func (x *SignalReply) GetError() SignalReply_Error {
	if x, ok := x.GetPayload().(*SignalReply_Error_); ok {
		return x.Error
	}
	return SignalReply_ERROR_CLOSED
}

type isSignalReply_Payload interface {
	isSignalReply_Payload()
}

type SignalReply_Join struct {
	Join *JoinReply `protobuf:"bytes,2,opt,name=join,proto3,oneof"`
}

type SignalReply_Create struct {
	Create *CreateReply `protobuf:"bytes,3,opt,name=create,proto3,oneof"`
}

type SignalReply_Description struct {
	Description *SessionDescription `protobuf:"bytes,4,opt,name=description,proto3,oneof"`
}

type SignalReply_Trickle struct {
	Trickle *Trickle `protobuf:"bytes,5,opt,name=trickle,proto3,oneof"`
}

type SignalReply_Error_ struct {
	Error SignalReply_Error `protobuf:"varint,6,opt,name=error,proto3,enum=soapbox.v1.SignalReply_Error,oneof"`
}

func (*SignalReply_Join) isSignalReply_Payload() {}

func (*SignalReply_Create) isSignalReply_Payload() {}

func (*SignalReply_Description) isSignalReply_Payload() {}

func (*SignalReply_Trickle) isSignalReply_Payload() {}

func (*SignalReply_Error_) isSignalReply_Payload() {}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room        string              `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Description *SessionDescription `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{2}
}

func (x *JoinRequest) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *JoinRequest) GetDescription() *SessionDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

type JoinReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *SessionDescription       `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Room        *RoomState                `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	Role        RoomState_RoomMember_Role `protobuf:"varint,3,opt,name=role,proto3,enum=soapbox.v1.RoomState_RoomMember_Role" json:"role,omitempty"`
}

func (x *JoinReply) Reset() {
	*x = JoinReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReply) ProtoMessage() {}

func (x *JoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReply.ProtoReflect.Descriptor instead.
func (*JoinReply) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{3}
}

func (x *JoinReply) GetDescription() *SessionDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *JoinReply) GetRoom() *RoomState {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *JoinReply) GetRole() RoomState_RoomMember_Role {
	if x != nil {
		return x.Role
	}
	return RoomState_RoomMember_ROLE_REGULAR
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Visibility  Visibility          `protobuf:"varint,2,opt,name=visibility,proto3,enum=soapbox.v1.Visibility" json:"visibility,omitempty"`
	Users       []int64             `protobuf:"varint,4,rep,packed,name=users,proto3" json:"users,omitempty"`
	Description *SessionDescription `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_VISIBILITY_PUBLIC
}

func (x *CreateRequest) GetUsers() []int64 {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CreateRequest) GetDescription() *SessionDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *SessionDescription `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Id          string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{5}
}

func (x *CreateReply) GetDescription() *SessionDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *CreateReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SessionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // "answer" | "offer" | "pranswer" | "rollback"
	Sdp  string `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
}

func (x *SessionDescription) Reset() {
	*x = SessionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDescription) ProtoMessage() {}

func (x *SessionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDescription.ProtoReflect.Descriptor instead.
func (*SessionDescription) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{6}
}

func (x *SessionDescription) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SessionDescription) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

type ICECandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidate        string `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SdpMid           string `protobuf:"bytes,2,opt,name=sdp_mid,json=sdpMid,proto3" json:"sdp_mid,omitempty"`
	SdpMLineIndex    int64  `protobuf:"varint,3,opt,name=sdp_m_line_index,json=sdpMLineIndex,proto3" json:"sdp_m_line_index,omitempty"`
	UsernameFragment string `protobuf:"bytes,4,opt,name=username_fragment,json=usernameFragment,proto3" json:"username_fragment,omitempty"`
}

func (x *ICECandidate) Reset() {
	*x = ICECandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICECandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICECandidate) ProtoMessage() {}

func (x *ICECandidate) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICECandidate.ProtoReflect.Descriptor instead.
func (*ICECandidate) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{7}
}

func (x *ICECandidate) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *ICECandidate) GetSdpMid() string {
	if x != nil {
		return x.SdpMid
	}
	return ""
}

func (x *ICECandidate) GetSdpMLineIndex() int64 {
	if x != nil {
		return x.SdpMLineIndex
	}
	return 0
}

func (x *ICECandidate) GetUsernameFragment() string {
	if x != nil {
		return x.UsernameFragment
	}
	return ""
}

type Trickle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target       Trickle_Target `protobuf:"varint,1,opt,name=target,proto3,enum=soapbox.v1.Trickle_Target" json:"target,omitempty"`
	IceCandidate *ICECandidate  `protobuf:"bytes,2,opt,name=ice_candidate,json=iceCandidate,proto3" json:"ice_candidate,omitempty"`
}

func (x *Trickle) Reset() {
	*x = Trickle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soapbox_v1_signal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trickle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trickle) ProtoMessage() {}

func (x *Trickle) ProtoReflect() protoreflect.Message {
	mi := &file_soapbox_v1_signal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trickle.ProtoReflect.Descriptor instead.
func (*Trickle) Descriptor() ([]byte, []int) {
	return file_soapbox_v1_signal_proto_rawDescGZIP(), []int{8}
}

func (x *Trickle) GetTarget() Trickle_Target {
	if x != nil {
		return x.Target
	}
	return Trickle_TARGET_PUBLISHER
}

func (x *Trickle) GetIceCandidate() *ICECandidate {
	if x != nil {
		return x.IceCandidate
	}
	return nil
}

var File_soapbox_v1_signal_proto protoreflect.FileDescriptor

var file_soapbox_v1_signal_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x6f, 0x61, 0x70, 0x62,
	0x6f, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x02, 0x0a,
	0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x33, 0x0a,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0xf6, 0x02, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12,
	0x31, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x40,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x63, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x40,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb3, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x6f, 0x61, 0x70,
	0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a,
	0x12, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x49, 0x43,
	0x45, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x64, 0x70, 0x5f,
	0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x64, 0x70, 0x4d, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x64, 0x70, 0x5f, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x64, 0x70,
	0x4d, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x63,
	0x6b, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x69, 0x63, 0x65, 0x5f, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x6f, 0x61, 0x70, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x43, 0x45, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x35, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x53, 0x48, 0x45, 0x52, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54,
	0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x52, 0x10, 0x01, 0x42, 0x0e, 0x5a,
	0x0c, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_soapbox_v1_signal_proto_rawDescOnce sync.Once
	file_soapbox_v1_signal_proto_rawDescData = file_soapbox_v1_signal_proto_rawDesc
)

func file_soapbox_v1_signal_proto_rawDescGZIP() []byte {
	file_soapbox_v1_signal_proto_rawDescOnce.Do(func() {
		file_soapbox_v1_signal_proto_rawDescData = protoimpl.X.CompressGZIP(file_soapbox_v1_signal_proto_rawDescData)
	})
	return file_soapbox_v1_signal_proto_rawDescData
}

var file_soapbox_v1_signal_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_soapbox_v1_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_soapbox_v1_signal_proto_goTypes = []interface{}{
	(SignalReply_Error)(0),         // 0: soapbox.v1.SignalReply.Error
	(Trickle_Target)(0),            // 1: soapbox.v1.Trickle.Target
	(*SignalRequest)(nil),          // 2: soapbox.v1.SignalRequest
	(*SignalReply)(nil),            // 3: soapbox.v1.SignalReply
	(*JoinRequest)(nil),            // 4: soapbox.v1.JoinRequest
	(*JoinReply)(nil),              // 5: soapbox.v1.JoinReply
	(*CreateRequest)(nil),          // 6: soapbox.v1.CreateRequest
	(*CreateReply)(nil),            // 7: soapbox.v1.CreateReply
	(*SessionDescription)(nil),     // 8: soapbox.v1.SessionDescription
	(*ICECandidate)(nil),           // 9: soapbox.v1.ICECandidate
	(*Trickle)(nil),                // 10: soapbox.v1.Trickle
	(*RoomState)(nil),              // 11: soapbox.v1.RoomState
	(RoomState_RoomMember_Role)(0), // 12: soapbox.v1.RoomState.RoomMember.Role
	(Visibility)(0),                // 13: soapbox.v1.Visibility
}
var file_soapbox_v1_signal_proto_depIdxs = []int32{
	4,  // 0: soapbox.v1.SignalRequest.join:type_name -> soapbox.v1.JoinRequest
	6,  // 1: soapbox.v1.SignalRequest.create:type_name -> soapbox.v1.CreateRequest
	8,  // 2: soapbox.v1.SignalRequest.description:type_name -> soapbox.v1.SessionDescription
	10, // 3: soapbox.v1.SignalRequest.trickle:type_name -> soapbox.v1.Trickle
	5,  // 4: soapbox.v1.SignalReply.join:type_name -> soapbox.v1.JoinReply
	7,  // 5: soapbox.v1.SignalReply.create:type_name -> soapbox.v1.CreateReply
	8,  // 6: soapbox.v1.SignalReply.description:type_name -> soapbox.v1.SessionDescription
	10, // 7: soapbox.v1.SignalReply.trickle:type_name -> soapbox.v1.Trickle
	0,  // 8: soapbox.v1.SignalReply.error:type_name -> soapbox.v1.SignalReply.Error
	8,  // 9: soapbox.v1.JoinRequest.description:type_name -> soapbox.v1.SessionDescription
	8,  // 10: soapbox.v1.JoinReply.description:type_name -> soapbox.v1.SessionDescription
	11, // 11: soapbox.v1.JoinReply.room:type_name -> soapbox.v1.RoomState
	12, // 12: soapbox.v1.JoinReply.role:type_name -> soapbox.v1.RoomState.RoomMember.Role
	13, // 13: soapbox.v1.CreateRequest.visibility:type_name -> soapbox.v1.Visibility
	8,  // 14: soapbox.v1.CreateRequest.description:type_name -> soapbox.v1.SessionDescription
	8,  // 15: soapbox.v1.CreateReply.description:type_name -> soapbox.v1.SessionDescription
	1,  // 16: soapbox.v1.Trickle.target:type_name -> soapbox.v1.Trickle.Target
	9,  // 17: soapbox.v1.Trickle.ice_candidate:type_name -> soapbox.v1.ICECandidate
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_soapbox_v1_signal_proto_init() }
func file_soapbox_v1_signal_proto_init() {
	if File_soapbox_v1_signal_proto != nil {
		return
	}
	file_soapbox_v1_room_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_soapbox_v1_signal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICECandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soapbox_v1_signal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trickle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_soapbox_v1_signal_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SignalRequest_Join)(nil),
		(*SignalRequest_Create)(nil),
		(*SignalRequest_Description)(nil),
		(*SignalRequest_Trickle)(nil),
	}
	file_soapbox_v1_signal_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SignalReply_Join)(nil),
		(*SignalReply_Create)(nil),
		(*SignalReply_Description)(nil),
		(*SignalReply_Trickle)(nil),
		(*SignalReply_Error_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_soapbox_v1_signal_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_soapbox_v1_signal_proto_goTypes,
		DependencyIndexes: file_soapbox_v1_signal_proto_depIdxs,
		EnumInfos:         file_soapbox_v1_signal_proto_enumTypes,
		MessageInfos:      file_soapbox_v1_signal_proto_msgTypes,
	}.Build()
	File_soapbox_v1_signal_proto = out.File
	file_soapbox_v1_signal_proto_rawDesc = nil
	file_soapbox_v1_signal_proto_goTypes = nil
	file_soapbox_v1_signal_proto_depIdxs = nil
}
